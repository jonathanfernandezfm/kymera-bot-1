const { EmbedBuilder } = require('discord.js');

module.exports = {
    name: 'normativa',
    description: 'Normativa interaction',
    execute: async (interaction) => {
        const embed_general = new EmbedBuilder()

            .setColor('#CD8543')
            .setDescription('`Normas aplicables con car√°cter general‚†Ä`')

            .addFields(
                {
                    name: '„Ö§',
                    value: '> :one:  **Respeto ante todos los miembros** que formen parte del gremio, ya tenga rango o carezca de √©l.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :two:  **Llorar, gritar y quejarse no sirve de nada**, actuar con calma, ofrecer soluciones y disfrutar del juego.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :three:  **El l√≠der de la party** es quien organiza, hace y deshace. No est√° obligado a aceptar a todos, es quien pone sus normas.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :four:  **Cualquier persona que robe/desprestigie el gremio**, ser√° totalmente expuesta y kickeada, sin opci√≥n de retorno.',
                    inline: false,
                },
                {
                    name: '„Ö§',
                    value: '> :five:  **No queremos ego players**, cada integrante de Kymera tiene un nivel diferente. Estamos para aprender de los fallos, nadie es mejor que nadie.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :six:  **Los rangos funcionan por Meritocracia**. (*personas que est√°n m√°s capacitadas seg√∫n sus m√©ritos*)',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :seven: ** En Caerleon y Zona Negra**, **RED IS DEATH**, no hay dramas por matar.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :eight:  **No os exime de la responsabilidad** si no has le√≠do las normas y se incumplen algunos de los puntos ya mencionados.',
                    inline: true,
                }
            );
        const embed_ncaerleon = new EmbedBuilder()

            .setColor('#FF2424')
            .setDescription('`Normas aplicables √∫nicamente a Caerleon`')

            .addFields(
                {
                    name: '„Ö§',
                    value: '> :one:  **Se le har√° caso al party leader o al caller de la party designado**, si alguien se niega a hacer caso ser√° motivo de kick y se le matar√° (DE NINGUNA MANERA PODR√Å PEDIR REGEAR)',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :two:  **No podr√° optar al regear** ninguna persona que no llegue a la IP m√≠nima y especializaci√≥n requerida para la actividad.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :three:  **RED IS DEATH**, si encontr√°is una party en la que est√© otro miembro de Hydra, pod√©is matarlo.',
                    inline: false,
                },
                {
                    name: '„Ö§',
                    value: '> :four:  **Se dar√° un primer aviso** si se perjudica a una party de full Kymera. El siguiente aviso ser√° expulsi√≥n (*Bombearlos , ir con oso a joder, revelar posici√≥n*)',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :five:  **Se dar√° un primer aviso** si hay muchas quejas de un jugador. El siguiente aviso ser√° motivo de expulsi√≥n permanente.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '>  :six:  **No toleramos lloros ni quejas**, solo queremos soluciones.',
                    inline: false,
                }
            );
        const embed_nfama = new EmbedBuilder()

            .setColor('#3373c7')
            .setDescription('`Normas aplicables √∫nicamente a Fama`')
            .addFields(
                {
                    name: '„Ö§',
                    value: '> :one:  **El party l√≠der es quien dirige la party**, elige quien va, que builds llevar y que IP m√≠nimo. Podr√° kickear libremente si no se le respeta.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :two:  **Al caller designado se le har√° caso y se le escuchar√° en todo momento**, de lo contrario, este podr√° expulsar a cualquier miembro de la party.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :three:  **El l√≠der no est√° obligado a aceptar a todo el mundo**, es su party, ponen sus reglas y el l√≠mite de miembros que asistir√°n.',
                    inline: false,
                },
                {
                    name: '„Ö§',
                    value: '> :four: **No toleramos lloros ni quejas**, solo soluciones. (Se tomar√°n medidas si ocurre con frecuencia)',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :five:  Si hay m√°s de una party en la misma Dungeon, **se dividir√°**, o  tendr√° prioridad **la que m√°s IP tenga con set de pelea**. ',
                    inline: true,
                }
            );

        const embed_navalonianas = new EmbedBuilder()

            .setColor('#ffca38')
            .setDescription('`Normas aplicables √∫nicamente a Avalonianas`')

            .addFields(
                {
                    name: '„Ö§',
                    value: '> üìù **Requisitos m√≠nimos:** \n\n - Equipamiento adecuado 6.3(calidad sobresaliente o m√°s) \n\n - Swaps 7 o equivalente m√≠nimo \n\n - Set de pelea T8  (las que se piden) \n\n - Montura r√°pida/Caballo Gallardo \n\n - Capa Fort Sterling \n\n - 5 comidas de tu rol + 50 venenos ',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> <:restar:1047921057874575431> **No se tolerar√°:** \n\n ```- Insultos„Ö§„Ö§„Ö§„Ö§„Ö§- Gritos\n\n- Menosprecios„Ö§„Ö§‚Äé - Discusiones```',
                    inline: false,
                },
                {
                    name: '„Ö§',
                    value: '> :one:  **Si tu rol es healer**, por muy mal que lo haga la party deber√°s intentar levantar a todos los posibles debido a que admites esta responsabilidad al inscribirte con ese rol.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '> :two:  **Se dar√° un primer aviso** si hay muchas quejas de un jugador. El siguiente aviso ser√° motivo de expulsi√≥n permanente de las avalonianas.',
                    inline: true,
                },
                {
                    name: '„Ö§',
                    value: '>  :three:  **Se har√° caso en todo momento al caller de la party**.',
                    inline: false,
                }
            );
        switch (interaction.values[0]) {
            case 'general':
                return await interaction.reply({
                    content: '',
                    ephemeral: true,
                    embeds: [embed_general],
                });
            case 'ncaerleon':
                return await interaction.reply({
                    content: '',
                    ephemeral: true,
                    embeds: [embed_ncaerleon],
                });
            case 'nfama':
                return await interaction.reply({
                    content: '',
                    ephemeral: true,
                    embeds: [embed_nfama],
                });
            case 'navalonianas':
                return await interaction.reply({
                    content: '',
                    ephemeral: true,
                    embeds: [embed_navalonianas],
                });
            default:
                return;
        }
    },
};
